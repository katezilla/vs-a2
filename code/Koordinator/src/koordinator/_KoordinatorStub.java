package koordinator;


/**
* koordinator/_KoordinatorStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Koordinator.idl
* Montag, 4. Mai 2015 21:58 Uhr MESZ
*/

public class _KoordinatorStub extends org.omg.CORBA.portable.ObjectImpl implements koordinator.Koordinator
{

  public void anmelden (int typId, String prozessId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("anmelden", true);
                $out.write_long (typId);
                $out.write_string (prozessId);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                anmelden (typId, prozessId        );
            } finally {
                _releaseReply ($in);
            }
  } // anmelden

  public void informieren (String prozessId, int sequenzNr, boolean termStatus, int letzteZahl)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("informieren", true);
                $out.write_string (prozessId);
                $out.write_long (sequenzNr);
                $out.write_boolean (termStatus);
                $out.write_long (letzteZahl);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                informieren (prozessId, sequenzNr, termStatus, letzteZahl        );
            } finally {
                _releaseReply ($in);
            }
  } // informieren

  public String[] getStarterIds ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getStarterIds", true);
                $in = _invoke ($out);
                String $result[] = koordinator.ProzessIdsHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getStarterIds (        );
            } finally {
                _releaseReply ($in);
            }
  } // getStarterIds

  public void berechnen (String monitorId, int anzahlGgtLower, int anzahlGgtUpper, int delayZeitLower, int delayZeitUpper, int termAbfragePeriode, int gewuenschterGgt)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("berechnen", true);
                $out.write_string (monitorId);
                $out.write_long (anzahlGgtLower);
                $out.write_long (anzahlGgtUpper);
                $out.write_long (delayZeitLower);
                $out.write_long (delayZeitUpper);
                $out.write_long (termAbfragePeriode);
                $out.write_long (gewuenschterGgt);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                berechnen (monitorId, anzahlGgtLower, anzahlGgtUpper, delayZeitLower, delayZeitUpper, termAbfragePeriode, gewuenschterGgt        );
            } finally {
                _releaseReply ($in);
            }
  } // berechnen

  public void beenden (String prozessIdAbsender)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("beenden", true);
                $out.write_string (prozessIdAbsender);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                beenden (prozessIdAbsender        );
            } finally {
                _releaseReply ($in);
            }
  } // beenden

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:koordinator/Koordinator:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _KoordinatorStub
